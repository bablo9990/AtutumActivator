# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'main.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import subprocess
from random import randint
import platform
bar11 = randint(70, 85)
bar10 = randint(74, 96)
bar8 = randint(64, 79)
bar7 = randint(53, 70)
from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(728, 505)
        font = QtGui.QFont()
        font.setFamily("Bauhaus 93")
        font.setPointSize(20)
        MainWindow.setFont(font)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setContentsMargins(10, 10, 10, 10)
        self.gridLayout.setSpacing(5)
        self.gridLayout.setObjectName("gridLayout")
        self.scrollArea = QtWidgets.QScrollArea(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(16)
        self.scrollArea.setFont(font)
        self.scrollArea.setWidgetResizable(True)
        self.scrollArea.setObjectName("scrollArea")
        self.scrollAreaWidgetContents = QtWidgets.QWidget()
        self.scrollAreaWidgetContents.setGeometry(QtCore.QRect(0, 0, 706, 433))
        self.scrollAreaWidgetContents.setObjectName("scrollAreaWidgetContents")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.scrollAreaWidgetContents)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.MainLayout = QtWidgets.QGridLayout()
        self.MainLayout.setObjectName("MainLayout")
        self.TabManeger = QtWidgets.QTabWidget(self.scrollAreaWidgetContents)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        self.TabManeger.setFont(font)
        self.TabManeger.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.TabManeger.setObjectName("TabManeger")
        self.win12 = QtWidgets.QWidget()
        self.win12.setObjectName("win12")
        self.gridLayout_5 = QtWidgets.QGridLayout(self.win12)
        self.gridLayout_5.setObjectName("gridLayout_5")
        self.sper12 = QtWidgets.QPushButton(self.win12)
        self.sper12.setObjectName("sper12")
        self.gridLayout_5.addWidget(self.sper12, 0, 0, 1, 1)
        self.per12 = QtWidgets.QLabel(self.win12)
        self.per12.setObjectName("per12")
        self.gridLayout_5.addWidget(self.per12, 1, 0, 1, 1)
        self.act12 = QtWidgets.QPushButton(self.win12)
        self.act12.setObjectName("act12")
        self.gridLayout_5.addWidget(self.act12, 2, 0, 1, 1)
        self.TabManeger.addTab(self.win12, "")
        self.win11 = QtWidgets.QWidget()
        self.win11.setObjectName("win11")
        self.gridLayout_4 = QtWidgets.QGridLayout(self.win11)
        self.gridLayout_4.setObjectName("gridLayout_4")
        self.per11 = QtWidgets.QLabel(self.win11)
        self.per11.setObjectName("per11")
        self.gridLayout_4.addWidget(self.per11, 1, 0, 1, 1)
        self.sper11 = QtWidgets.QPushButton(self.win11)
        self.sper11.setObjectName("sper11")
        self.gridLayout_4.addWidget(self.sper11, 0, 0, 1, 1)
        self.act11 = QtWidgets.QPushButton(self.win11)
        self.act11.setObjectName("act11")
        self.gridLayout_4.addWidget(self.act11, 2, 0, 1, 1)
        self.TabManeger.addTab(self.win11, "")
        self.win10 = QtWidgets.QWidget()
        self.win10.setObjectName("win10")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.win10)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.act10 = QtWidgets.QPushButton(self.win10)
        self.act10.setObjectName("act10")
        self.gridLayout_3.addWidget(self.act10, 2, 0, 1, 1)
        self.sper10 = QtWidgets.QPushButton(self.win10)
        self.sper10.setObjectName("sper10")
        self.gridLayout_3.addWidget(self.sper10, 0, 0, 1, 1)
        self.per10 = QtWidgets.QLabel(self.win10)
        self.per10.setObjectName("per10")
        self.gridLayout_3.addWidget(self.per10, 1, 0, 1, 1)
        self.TabManeger.addTab(self.win10, "")
        self.win8 = QtWidgets.QWidget()
        self.win8.setObjectName("win8")
        self.gridLayout_6 = QtWidgets.QGridLayout(self.win8)
        self.gridLayout_6.setObjectName("gridLayout_6")
        self.sper8 = QtWidgets.QPushButton(self.win8)
        self.sper8.setObjectName("sper8")
        self.gridLayout_6.addWidget(self.sper8, 0, 0, 1, 1)
        self.per8 = QtWidgets.QLabel(self.win8)
        self.per8.setObjectName("per8")
        self.gridLayout_6.addWidget(self.per8, 1, 0, 1, 1)
        self.act8 = QtWidgets.QPushButton(self.win8)
        self.act8.setObjectName("act8")
        self.gridLayout_6.addWidget(self.act8, 2, 0, 1, 1)
        self.TabManeger.addTab(self.win8, "")
        self.win7 = QtWidgets.QWidget()
        self.win7.setObjectName("win7")
        self.gridLayout_7 = QtWidgets.QGridLayout(self.win7)
        self.gridLayout_7.setObjectName("gridLayout_7")
        self.sper7 = QtWidgets.QPushButton(self.win7)
        self.sper7.setObjectName("sper7")
        self.gridLayout_7.addWidget(self.sper7, 0, 0, 1, 1)
        self.per7 = QtWidgets.QLabel(self.win7)
        self.per7.setObjectName("per7")
        self.gridLayout_7.addWidget(self.per7, 1, 0, 1, 1)
        self.act7 = QtWidgets.QPushButton(self.win7)
        self.act7.setObjectName("act7")
        self.gridLayout_7.addWidget(self.act7, 2, 0, 1, 1)
        self.TabManeger.addTab(self.win7, "")
        self.MainLayout.addWidget(self.TabManeger, 1, 0, 1, 1)
        self.gridLayout_2.addLayout(self.MainLayout, 0, 0, 1, 1)
        self.scrollArea.setWidget(self.scrollAreaWidgetContents)
        self.gridLayout.addWidget(self.scrollArea, 0, 0, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.menuBar = QtWidgets.QMenuBar(MainWindow)
        self.menuBar.setGeometry(QtCore.QRect(0, 0, 728, 25))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        self.menuBar.setFont(font)
        self.menuBar.setObjectName("menuBar")
        self.menu = QtWidgets.QMenu(self.menuBar)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        self.menu.setFont(font)
        self.menu.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.menu.setAcceptDrops(False)
        self.menu.setObjectName("menu")
        MainWindow.setMenuBar(self.menuBar)
        self.actionNew_Ctrl_N = QtWidgets.QAction(MainWindow)
        self.actionNew_Ctrl_N.setObjectName("actionNew_Ctrl_N")
        self.actionOpen = QtWidgets.QAction(MainWindow)
        self.actionOpen.setObjectName("actionOpen")
        self.actionSave_Ctrl_S = QtWidgets.QAction(MainWindow)
        self.actionSave_Ctrl_S.setObjectName("actionSave_Ctrl_S")
        self.actionSave_As = QtWidgets.QAction(MainWindow)
        self.actionSave_As.setObjectName("actionSave_As")
        self.actionSave_All_Ctrl_Shift_Alt = QtWidgets.QAction(MainWindow)
        self.actionSave_All_Ctrl_Shift_Alt.setObjectName("actionSave_All_Ctrl_Shift_Alt")
        self.actionClose_Alt_F4 = QtWidgets.QAction(MainWindow)
        self.actionClose_Alt_F4.setObjectName("actionClose_Alt_F4")
        self.actionUndo_Ctrl_Z = QtWidgets.QAction(MainWindow)
        self.actionUndo_Ctrl_Z.setObjectName("actionUndo_Ctrl_Z")
        self.actionDo_again_Ctrl_Shift_Z = QtWidgets.QAction(MainWindow)
        self.actionDo_again_Ctrl_Shift_Z.setObjectName("actionDo_again_Ctrl_Shift_Z")
        self.actionRedo_Ctrl_Y = QtWidgets.QAction(MainWindow)
        self.actionRedo_Ctrl_Y.setObjectName("actionRedo_Ctrl_Y")
        self.actionCopy_Ctrl_C = QtWidgets.QAction(MainWindow)
        self.actionCopy_Ctrl_C.setObjectName("actionCopy_Ctrl_C")
        self.actionCut_Ctrl_X = QtWidgets.QAction(MainWindow)
        self.actionCut_Ctrl_X.setObjectName("actionCut_Ctrl_X")
        self.actionPaste_Ctrl_V = QtWidgets.QAction(MainWindow)
        self.actionPaste_Ctrl_V.setObjectName("actionPaste_Ctrl_V")
        self.actionChange = QtWidgets.QAction(MainWindow)
        self.actionChange.setObjectName("actionChange")
        self.actionInstall = QtWidgets.QAction(MainWindow)
        self.actionInstall.setObjectName("actionInstall")
        self.actionHelp_Dialog = QtWidgets.QAction(MainWindow)
        self.actionHelp_Dialog.setObjectName("actionHelp_Dialog")
        self.Theme = QtWidgets.QAction(MainWindow)
        self.Theme.setCheckable(False)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(9)
        self.Theme.setFont(font)
        self.Theme.setObjectName("Theme")
        self.actionQiwi = QtWidgets.QAction(MainWindow)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(9)
        self.actionQiwi.setFont(font)
        self.actionQiwi.setObjectName("actionQiwi")
        self.Subscribe = QtWidgets.QAction(MainWindow)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(9)
        self.Subscribe.setFont(font)
        self.Subscribe.setObjectName("Subscribe")
        self.Pus = QtWidgets.QAction(MainWindow)
        self.Pus.setObjectName("Pus")
        self.Bel = QtWidgets.QAction(MainWindow)
        self.Bel.setObjectName("Bel")
        self.Eng = QtWidgets.QAction(MainWindow)
        self.Eng.setObjectName("Eng")
        self.action = QtWidgets.QAction(MainWindow)
        self.action.setCheckable(False)
        self.action.setObjectName("action")
        self.action_2 = QtWidgets.QAction(MainWindow)
        self.action_2.setObjectName("action_2")
        self.action_3 = QtWidgets.QAction(MainWindow)
        self.action_3.setObjectName("action_3")
        self.menu.addAction(self.action)
        self.menu.addAction(self.action_2)
        self.menu.addAction(self.action_3)
        self.menuBar.addAction(self.menu.menuAction())
        self.retranslateUi(MainWindow)
        self.TabManeger.setCurrentIndex(4)

        self.path = "D:\Рабочий стол\Admin\Important {ADMIN}\Programming Projects\Python\Windows Super Activator"
        self.Activators = [self.act12, self.act11, self.act10, self.act8, self.act7]
        self.Persents = [self.sper12, self.sper11, self.sper10, self.sper8, self.sper7]
        self.CurrentPer = [self.per12, self.per11, self.per10, self.per8, self.per7]
        self.Language = "Rus"
        self.functions()

        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "ATOM`s Windows Activator Free"))
        self.sper12.setText(_translate("MainWindow", "Показать процент успешной активации Windows 12"))
        self.per12.setText(_translate("MainWindow", "Процент:"))
        self.act12.setText(_translate("MainWindow", "Активировать Windows 12"))
        self.TabManeger.setTabText(self.TabManeger.indexOf(self.win12), _translate("MainWindow", "Windows 12"))
        self.per11.setText(_translate("MainWindow", "Процент:"))
        self.sper11.setText(_translate("MainWindow", "Показать процент успешной активации Windows 11"))
        self.act11.setText(_translate("MainWindow", "Активировать Windows 11"))
        self.TabManeger.setTabText(self.TabManeger.indexOf(self.win11), _translate("MainWindow", "Windows 11"))
        self.act10.setText(_translate("MainWindow", "Активировать Windows 10"))
        self.sper10.setText(_translate("MainWindow", "Показать процент успешной активации Windows 10"))
        self.per10.setText(_translate("MainWindow", "Процент:"))
        self.TabManeger.setTabText(self.TabManeger.indexOf(self.win10), _translate("MainWindow", "Windows 10"))
        self.sper8.setText(_translate("MainWindow", "Показать процент успешной активации Windows 8"))
        self.per8.setText(_translate("MainWindow", "Процент:"))
        self.act8.setText(_translate("MainWindow", "Активировать Windows 8"))
        self.TabManeger.setTabText(self.TabManeger.indexOf(self.win8), _translate("MainWindow", "Windows 8"))
        self.sper7.setText(_translate("MainWindow", "Показать процент успешной активации Windows 7"))
        self.per7.setText(_translate("MainWindow", "Процент:"))
        self.act7.setText(_translate("MainWindow", "Активировать Windows 7"))
        self.TabManeger.setTabText(self.TabManeger.indexOf(self.win7), _translate("MainWindow", "Windows 7"))
        self.menu.setTitle(_translate("MainWindow", "Язык"))
        self.actionNew_Ctrl_N.setText(_translate("MainWindow", "New...            Ctrl + N"))
        self.actionNew_Ctrl_N.setShortcut(_translate("MainWindow", "Ctrl+N"))
        self.actionOpen.setText(_translate("MainWindow", "Open             Ctrl + O"))
        self.actionOpen.setShortcut(_translate("MainWindow", "Ctrl+O"))
        self.actionSave_Ctrl_S.setText(_translate("MainWindow", "Save              Ctrl + S"))
        self.actionSave_Ctrl_S.setShortcut(_translate("MainWindow", "Ctrl+S"))
        self.actionSave_As.setText(_translate("MainWindow", "Save As"))
        self.actionSave_As.setShortcut(_translate("MainWindow", "Backspace"))
        self.actionSave_All_Ctrl_Shift_Alt.setText(_translate("MainWindow", "Save All      Ctrl + Shift +Alt"))
        self.actionSave_All_Ctrl_Shift_Alt.setShortcut(_translate("MainWindow", "Ctrl+Alt+S"))
        self.actionClose_Alt_F4.setText(_translate("MainWindow", "Close          Alt + F4"))
        self.actionUndo_Ctrl_Z.setText(_translate("MainWindow", "Undo           Ctrl +Z"))
        self.actionUndo_Ctrl_Z.setShortcut(_translate("MainWindow", "Ctrl+Z"))
        self.actionDo_again_Ctrl_Shift_Z.setText(_translate("MainWindow", "Do again    Ctrl + Shift + Z"))
        self.actionDo_again_Ctrl_Shift_Z.setShortcut(_translate("MainWindow", "Ctrl+Shift+Z"))
        self.actionRedo_Ctrl_Y.setText(_translate("MainWindow", "Redo           Ctrl + Y"))
        self.actionRedo_Ctrl_Y.setShortcut(_translate("MainWindow", "Ctrl+Y"))
        self.actionCopy_Ctrl_C.setText(_translate("MainWindow", "Copy           Ctrl + C"))
        self.actionCopy_Ctrl_C.setShortcut(_translate("MainWindow", "Ctrl+C"))
        self.actionCut_Ctrl_X.setText(_translate("MainWindow", "Cut              Ctrl + X"))
        self.actionCut_Ctrl_X.setShortcut(_translate("MainWindow", "Ctrl+X"))
        self.actionPaste_Ctrl_V.setText(_translate("MainWindow", "Paste           Ctrl + V"))
        self.actionPaste_Ctrl_V.setShortcut(_translate("MainWindow", "Ctrl+V"))
        self.actionChange.setText(_translate("MainWindow", "Change"))
        self.actionInstall.setText(_translate("MainWindow", "Install"))
        self.actionHelp_Dialog.setText(_translate("MainWindow", "Help Dialog"))
        self.Theme.setText(_translate("MainWindow", "Тема"))
        self.actionQiwi.setText(_translate("MainWindow", "Qiwi"))
        self.Subscribe.setText(_translate("MainWindow", "Подписаться"))
        self.Pus.setText(_translate("MainWindow", "Русский"))
        self.Bel.setText(_translate("MainWindow", "Беларуская мова"))
        self.Eng.setText(_translate("MainWindow", "English"))
        self.action.setText(_translate("MainWindow", "Беларуская мова"))
        self.action_2.setText(_translate("MainWindow", "English"))
        self.action_3.setText(_translate("MainWindow", "Русский"))

    def functions(self):
        self.act11.clicked.connect(lambda:self.Activator(self.act11.text()))
        self.act10.clicked.connect(lambda:self.Activator(self.act10.text()))
        self.act8.clicked.connect(lambda:self.Activator(self.act8.text()))
        self.act7.clicked.connect(lambda:self.Activator(self.act7.text()))
        self.action.triggered.connect(lambda: self.Belarus())
        self.action_2.triggered.connect(lambda: self.English())
        self.action_3.triggered.connect(lambda: self.Russian())
        self.sper12.clicked.connect(lambda: self.Pers(self.sper12.text()))
        self.sper11.clicked.connect(lambda: self.Pers(self.sper11.text()))
        self.sper10.clicked.connect(lambda: self.Pers(self.sper10.text()))
        self.sper8.clicked.connect(lambda: self.Pers(self.sper8.text()))
        self.sper7.clicked.connect(lambda: self.Pers(self.sper7.text()))

    def Activator(self, text):
        print(text)
        if '11' in text:
            if platform.win32_ver()[0] == '11':
                import os
                os.system(f"cd {self.path}")
                os.system('powershell Start-Process "activator.bat" -Verb RunAs')
        if '10' in text:
            if platform.win32_ver()[0] == '10':
                import os
                os.system(f"cd {self.path}")
                os.system('powershell Start-Process "activator.bat" -Verb RunAs')
        if '8' in text:
            if platform.win32_ver()[0] == '8':
                import os
                os.system(f"cd {self.path}")
                os.system('powershell Start-Process "activator.bat" -Verb RunAs')
        if '7' in text:
            if platform.win32_ver()[0] == '7':
                import os
                os.system(f"cd {self.path}")
                os.system('powershell Start-Process "activator.bat" -Verb RunAs')

    def Pers(self, menu):
        if '12' in menu:
            if self.per12.text() == "Процент:":
                self.per12.setText(f"{self.per12.text()} 0%")
            else:
                if "Microsoft Windows 12" in str(subprocess.check_output("systeminfo")):
                    if self.Language == "Rus":
                        self.per12.setText(f"Процент: 0%")
                if self.Language == "Bel":
                    self.per12.setText(f"Працэнт: 0%")
                if self.Language == "Eng":
                    self.per12.setText(f"Percent: 0%")
        if '11' in menu:
            if platform.win32_ver()[0] == '11':
                if self.per11.text() == "Процент:":
                    self.per11.setText(f"{self.per11.text()} {bar11}%")
                else:
                    if self.Language == "Rus":
                        self.per11.setText(f"Процент: {bar11}%")
                    if self.Language == "Bel":
                        self.per11.setText(f"Працэнт: {bar11}%")
                    if self.Language == "Eng":
                        self.per11.setText(f"Percent: {bar11}%")

        if '10' in menu:
            if platform.win32_ver()[0] == '10':
                if self.per10.text() == "Процент:":
                    self.per10.setText(f"{self.per10.text()} {bar10}%")
                else:
                    if self.Language == "Rus":
                        self.per10.setText(f"Процент: {bar10}%")
                    if self.Language == "Bel":
                        self.per10.setText(f"Працэнт: {bar10}%")
                    if self.Language == "Eng":
                        self.per10.setText(f"Percent: {bar10}%")

        if '8' in menu:
            if platform.win32_ver()[0] == '8':
                if self.per8.text() == "Процент:":
                    self.per8.setText(f"{self.per8.text()} {bar8}%")
                else:
                    if self.Language == "Rus":
                            self.per8.setText(f"Процент: {bar8}%")
                    if self.Language == "Bel":
                        self.per8.setText(f"Працэнт: {bar8}%")
                    if self.Language == "Eng":
                        self.per8.setText(f"Percent: {bar8}%")

        if '7' in menu:
            if platform.win32_ver()[0] == '7':
                if self.per7.text() == "Процент:":
                    self.per7.setText(f"{self.per7.text()} {bar7}%")
                else:
                    if self.Language == "Rus":
                        self.per7.setText(f"Процент: {bar7}%")
                    if self.Language == "Bel":
                        self.per7.setText(f"Працэнт: {bar7}%")
                    if self.Language == "Eng":
                        self.per7.setText(f"Percent: {bar7}%")

    def Belarus(self):
        self.Language = 'Bel'
        for i in self.CurrentPer:
            i.setText("Працэнт:")
        self.sper12.setText("Паказаць працэнт паспяховай актывацыі Windows 12")
        self.sper11.setText("Паказаць працэнт паспяховай актывацыі Windows 11")
        self.sper10.setText("Паказаць працэнт паспяховай актывацыі Windows 10")
        self.sper8.setText("Паказаць працэнт паспяховай актывацыі Windows 8")
        self.sper7.setText("Паказаць працэнт паспяховай актывацыі Windows 7")

        self.act12.setText("Актываваць Windows 12")
        self.act11.setText("Актываваць Windows 11")
        self.act10.setText("Актываваць Windows 10")
        self.act8.setText("Актываваць Windows 8")
        self.act7.setText("Актываваць Windows 7")

        self.TabManeger.setTabText(self.TabManeger.indexOf(self.win12), "Windows 12")
        self.TabManeger.setTabText(self.TabManeger.indexOf(self.win11), "Windows 11")
        self.TabManeger.setTabText(self.TabManeger.indexOf(self.win10), "Windows 10")
        self.TabManeger.setTabText(self.TabManeger.indexOf(self.win8), "Windows 8")
        self.TabManeger.setTabText(self.TabManeger.indexOf(self.win7), "Windows 7")

        self.menu.setTitle("Мова")

    def English(self):
        self.Language = 'Eng'
        for i in self.CurrentPer:
            i.setText("Percent:")
        self.sper12.setText("Show percentage of successful Windows 12 activation")
        self.sper11.setText("Show percentage of successful Windows 11 activation")
        self.sper10.setText("Show percentage of successful Windows 10 activation")
        self.sper8.setText("Show percentage of successful Windows 8 activation")
        self.sper7.setText("Show percentage of successful Windows 7 activation")

        self.act12.setText("Activate Windows 12")
        self.act11.setText("Activate Windows 11")
        self.act10.setText("Activate Windows 10")
        self.act8.setText("Activate Windows 8")
        self.act7.setText("Activate Windows 7")

        self.TabManeger.setTabText(self.TabManeger.indexOf(self.win12), "Windows 12")
        self.TabManeger.setTabText(self.TabManeger.indexOf(self.win11), "Windows 11")
        self.TabManeger.setTabText(self.TabManeger.indexOf(self.win10), "Windows 10")
        self.TabManeger.setTabText(self.TabManeger.indexOf(self.win8), "Windows 8")
        self.TabManeger.setTabText(self.TabManeger.indexOf(self.win7), "Windows 7")

        self.menu.setTitle("Language")

    def Russian(self):
        self.Language = 'Rus'
        for i in self.CurrentPer:
            i.setText("Процент:")

        self.sper12.setText("Показать процент успешной активации Windows 12")
        self.sper11.setText("Показать процент успешной активации Windows 11")
        self.sper10.setText("Показать процент успешной активации Windows 10")
        self.sper8.setText("Показать процент успешной активации Windows 8")
        self.sper7.setText("Показать процент успешной активации Windows 7")

        self.act12.setText("Активировать Windows 12")
        self.act11.setText("Активировать Windows 11")
        self.act10.setText("Активировать Windows 10")
        self.act8.setText("Активировать Windows 8")
        self.act7.setText("Активировать Windows 7")

        self.TabManeger.setTabText(self.TabManeger.indexOf(self.win12), "Windows 12")
        self.TabManeger.setTabText(self.TabManeger.indexOf(self.win11), "Windows 11")
        self.TabManeger.setTabText(self.TabManeger.indexOf(self.win10), "Windows 10")
        self.TabManeger.setTabText(self.TabManeger.indexOf(self.win8), "Windows 8")
        self.TabManeger.setTabText(self.TabManeger.indexOf(self.win7), "Windows 7")

        self.menu.setTitle("Язык")


if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
